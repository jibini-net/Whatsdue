/* DO NOT EDIT THIS FILE */
// DFA RESTORED IN 87.4128ms
// GENERATED FROM 'D:\DotNetWorkspace\Whatsdue\Whatsdue.Generated\Models\Account.model' AT 2023-08-18 21:33:42
#nullable disable
namespace Generated;
public class Account
{
    public int Id { get; set; }
    public string Email { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public class Repository
    {
        private readonly IModelDbAdapter db;
        public Repository(IModelDbAdapter db)
        {
            this.db = db;
        }
        public async Task<List<Account>> dbo__Account_List()
        {
            return await db.ExecuteAsync<List<Account>>("dbo.Account_List", new
            {

            });
        }
        public async Task<Account> dbo__Account_GetById(int Id)
        {
            return await db.ExecuteAsync<Account>("dbo.Account_GetById", new
            {
                Id
            });
        }
    }
    public interface IService
    {
        Task<List<Account>> List();
        Task<Account> Get(int Id);
    }
    public interface IBackendService : IService
    {
        // Implement and inject this interface as a separate service
    }
    public class DbService : IService
    {
        private readonly IModelDbWrapper wrapper;
        private readonly IBackendService impl;
        public DbService(IModelDbWrapper wrapper, IBackendService impl)
        {
            this.wrapper = wrapper;
            this.impl = impl;
        }
        public async Task<List<Account>> List()
        {
            return await wrapper.ExecuteAsync<List<Account>>(async () => await impl.List(

                ));
        }
        public async Task<Account> Get(int Id)
        {
            return await wrapper.ExecuteAsync<Account>(async () => await impl.Get(
                Id
                ));
        }
    }
    public class ApiService : IService
    {
        private readonly IModelApiAdapter api;
        public ApiService(IModelApiAdapter api)
        {
            this.api = api;
        }
        public async Task<List<Account>> List()
        {
            return await api.ExecuteAsync<List<Account>>("Account/List", new
            {

            });
        }
        public async Task<Account> Get(int Id)
        {
            return await api.ExecuteAsync<Account>("Account/Get", new
            {
                Id
            });
        }
    }
}
// GENERATED IN 23.768ms
